########ch13#######
<문제1>
#include <stdio.h>

int main()
{
	int arr[5] = { 1, 2, 3, 4, 5 };
	int* ptr = arr;
	
	for (int i = 0; i < 5; i++)
	{
		*ptr += 2;
		ptr++; // ptr에 저장된 값을 변경.
		printf("%d, ", arr[i]);
	}
	return 0;
}

<문제2>
#include <stdio.h>

int main()
{
	int arr[5] = { 1, 2, 3, 4, 5 };
	int* ptr = arr;
	
	for (int i = 0; i < 5; i++)
	{
		*(ptr+i) += 2; // ptr의 연산을 이용. ptr값은 변하지 않음.
		printf("%d, ", arr[i]);
	}
	return 0;
}

<문제3>
#include <stdio.h>

int main()
{
	int arr[5] = { 1,2,3,4,5 };
	int* ptr = &arr[4];
	int sum = 0;

	for (int i = 0; i < 5; i++)
	{
		sum += *(ptr-i);
	}
	// ptr에서 i만큼 감소한 주소값에 해당하는 메모리공간의 값을 반환하여 sum에 더하라.
	// ptr에 저장된 값은 유지되는 형태.
	printf("배열 요소의 합 : %d \n", sum);

	return 0;
}

<문제4>
#include <stdio.h>

int main()
{
	int arr[6] = { 1,2,3,4,5,6 };
	int* ptr = &arr[5];
	int x;
	printf("뒤집어진 배열의 요소 : \n");

	for (int i = 0; i < 3; i++) // 바꾸는 횟수는 세번.
	{
		x = arr[i]; // arr[i]에 본래 배열요소 저장. arr[i]==*(arr+i)
		*(arr + i) = *ptr; // arr[i]에 ptr이 가리키는 요소를 저장.
		*ptr = x; // ptr이 가리키는 요소에 arr 앞부분 저장.
		ptr--;
	}

	for (int i = 0; i < 6; i++)
		printf("%d, ", arr[i]);

	return 0;
}

######ch14######
14-1
<문제1>
#include <stdio.h>

int squrebyvalue(int num)
{
	return num * num;
}

void squrebyreference(int* pnum)
{
	*pnum=(*pnum) * (*pnum); // num에 있는 변수를 다시 초기화하는 과정.
}
int main()
{
	int num;
	printf("숫자를 입력 : ");
	scanf("%d", &num);

	printf("제곱 : %d \n", squrebyvalue(num));
	printf("num값 : %d \n", num);
	squrebyreference(&num);
	printf("변경된 num값 : %d \n", num);

	return 0;
}

<문제2>
#include <stdio.h>

void Swap3(int* n1, int* n2, int* n3)
{
	int temp2, temp3;
	temp2 = *n2;
	*n2 = *n1;
	temp3 = *n3;
	*n3 = temp2;
	*n1 = temp3;
}

int main()
{
	int num1, num2, num3;
	printf("세 개의 정수를 입력 : ");
	scanf("%d %d %d", &num1, &num2, &num3);

	Swap3(&num1, &num2, &num3);

	printf("뒤바뀐 숫자들 : %d %d %d \n", num1, num2, num3);

	return 0;
}

----배열의 형태---
#include <stdio.h>

void Swap3(int ptr[]);

int main()
{
	int arr[3];
	printf("세 개의 정수를 입력 : ");
	for (int i = 0; i < 3; i++)
		scanf("%d", &arr[i]); // arr[i]는 요소값이기 때문에 주소값을 반환해야함

	Swap3(arr);

	for (int x = 0; x < 3; x++)
		printf("%d ", arr[x]);

	return 0;
}

void Swap3(int ptr[])
{
	int temp2, temp3;
	temp2 = ptr[1];
	ptr[1] = ptr[0];
	temp3 = ptr[2];
	ptr[2] = temp2;
	ptr[0] = temp3;
}
























