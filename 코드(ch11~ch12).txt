
#######ch11########
11-1
<문제1>
#include <stdio.h>

int main()
{
	int arr[5];
	int i;
	int max, min, sum;

	printf("5개의 정수를 입력 : ");
	scanf("%d %d %d %d %d", &arr[0], &arr[1], &arr[2], &arr[3], &arr[4]);
	max = min = sum = arr[0];

	for (i = 1; i < 5; i++)
	{
		sum += arr[i];
		if (max < arr[i])
			max = arr[i]; // 배열의 순차적 접근을 이용하여 대소를 비교. 큰 값은 다시 초기화하여 유지. 

		if (min > arr[i])
			min = arr[i]; // 반복문 안에 조건문 여러개를 사용할 수 있다.
	}
	
	printf("최댓값 : %d \n", max);
	printf("최솟값 : %d \n", min);
	printf("총 합 : %d \n", sum);

	return 0;
}

<문제2>
#include <stdio.h>

int main()
{
	char text[] = { 'G','o','o','d',' ','t','i','m','e' }; // 문자 배열을 선언.
	int arr = sizeof(text) / sizeof(char);
	int i;

	for (i = 0; i < arr; i++) // i<arr인 이유... 0번째부터 시작이기 때문에.
		printf("%c", text[i]);

	return 0;
}

11-2
<문제1>
#include <stdio.h>

int main()
{
	char arr[50];
	int x;

	printf("하나의 영단어를 입력하시오. ");
	scanf("%s", arr);
	
	for (x = 0; arr[x] != '\0'; x++) // 문자열의 길이를 구하고 싶으므로 널문자를 찾는과정.
		continue; // for문에 빠져나오고 나서 호출문을 실행해야하므로. 

	printf("입력한 문자열의 길이: %d", x); 

	return 0;
}

<문제2>
#include <stdio.h>

int main()
{
	char text[100];
	int i, len;
	int x;
	printf("영단어를 입력 : ");
	scanf("%s", text);

	for (i = 0; text[i] != 0; i++)
		continue;
	len = i;

	for (int j = 1; j<=(len - 1) / 2; j++)
	{
		x = text[j - 1];
		text[j - 1] = text[len - 1 - (j-1)];
		text[len - 1 - (j-1)] = x;
	}
	printf("뒤집힌 영단어 : %s \n", text);

	return 0;
}

<문제3>
#include <stdio.h>

int main()
{
	char text[50];
	int i;
	int result;

	printf("하나의 영단어를 입력하시오 : ");
	scanf("%s", text);
	result = text[0];

	for (i = 1; text[i] != 0; i++) // 널문자의 위치를 통해 반복문의 횟수를 결정.
	{
		if (result < text[i]) // 배열의 순차적접근을 이용하여 최대,최소를 구하는 방법
			result = text[i];
	}
	printf("아스키코드 값이 가장 큰 문자 : %c \n", result);

	return 0;
}

####ch12#####
<문제1>
#include <stdio.h>

int main()
{
	int num = 10;
	int* ptr1 = &num; // 포인터변수1은 num 메모리공간 주소값으로 초기화.
	int* ptr2 = ptr1; // 포인터변수2은 포인터변수1에 저장된 값으로 초기화. 즉 num 주소값. 

	(*ptr1)++; // num의 값이 증가. num=11
	(*ptr2)++; // num2의 값이 증가. num=12
	printf("%d", num);

	return 0;
}

<문제2>
#include <stdio.h>

int main()
{
	int num1 = 10;
	int num2 = 20;
	int* ptr1 = &num1;
	int* ptr2 = &num2;
	int* tempt = NULL;

	(*ptr1)+=10; // num1 = 20
	(*ptr2)-=10; // num2 = 10

	tempt = ptr1; // tempt에는 ptr1에 저장된 num1 주소값으로 초기화됨.
	ptr1 = ptr2;; // ptr1에는 ptr2에 저장된 num2 주소값으로 초기화됨. 10
	ptr2 = tempt; // ptr2에는 tempt에 저장된 num1 주소값으로 초기화됨. 20

	printf("ptr1이 가리키는 수 : %d, ptr2가 가리키는 수 : %d \n", *ptr1, *ptr2);

	return 0;
}































