######CH8#######
8-1
<1이상 100미만의 정수 중에서 3의 배수이거나 4의 배수인 정수를 순서대로 출력>
#include <stdio.h>

int main(void)
{
	int num;

	for (num = 1; num <= 100; num++)
	{
		if (num % 3== 0 || num % 4 == 0)
			printf("3의 배수 이거나 4의 배수인 정수 : %d\n", num);
	}
	
	return 0;
}

<입력한 정수의 절댓값을 출력>
#include <stdio.h>

int main(void)
{
	int num, abs;
	printf("정수를 입력 : %d");
	scanf_s("%d", &num);

	abs = num > 0 ? num : num * (-1);
	printf("%d", abs);
	return 0;
}

<문제1>
#include <stdio.h>

int main(void)
{
	int num;

	for (num = 1; num <= 100; num++)
	{
		if (num % 7 == 0 || num % 9 == 0)
			printf("7 또는 9의 배수 : %d \n", num);
	}

	return 0;
}

OR

#include <stdio.h>

int main()
{
	
	for (int i = 1; i <= 100; i++)
	{
		if (i % 7 == 0 || i % 9 == 0)
			printf("%d ", i);
	}
	return 0;
}

OR

#include <stdio.h>

int main()
{
	
	for (int i = 1; i <= 100; i++)
	{
		if (i % 7 == 0)
		{
			if (i % 9 != 0)
				printf("7의 배수 : %d \n", i);
			else
				printf("7과 9의 공배수 : %d \n", i);
		}
		if (i % 9 == 0)
			printf("9의 배수 : %d \n", i);
		
	}
	return 0;
}

<문제2>
#include <stdio.h>

int main(void)
{
	int num1, num2, result;

	printf("두 정수를 입력 : ");
	scanf_s("%d %d", &num1, &num2);
	
	result = num1 > num2 ? num1 - num2 : num2 - num1;

	printf("두 정수의 차 : %d \n", result);
	return 0;
}

<문제3>
#include <stdio.h>

int main(void)
{
	double x, y, z;
	double avg;

	printf("국어 영어 수학 점수 입력 : ");
	scanf_s("%lf %lf %lf", &x, &y, &z);
	avg = (x + y + z) / 3;

	printf("%f \n", avg);

	if (avg >= 90)
		printf("A");
	else if (avg >= 80)
		printf("B");
	else if (avg >= 70)
		printf("C");
	else if (avg >= 50)
		printf("D");
	else
		printf("F");

	return 0;
}

8-2
<문제1>
#include <stdio.h>

int main(void)
{
	int dan = 2;
	int i = 1;

	while (1)
	{
		if (i <= dan)
		{
			printf("%d*%d=%d \n", dan, i, dan * i);
			i++;
		}
		else if (dan < 8)
		{
			dan += 2;
			i = 1;
		}
		else
			break;
	}
	return 0;
}

OR

#include <stdio.h>

int main()
{
	for (int dan = 2; dan < 9; dan += 2)
	{
		for (int i = 1; i <= dan; i++)
			printf("%d * %d = %d \n", dan, i, dan * i);
		printf("\n");
	}
	return 0;
}

<문제2>
#include <stdio.h>

int main(void)
{
	int A = 1, Z;
	int sum;

	while (1)
	{
		for (Z = 1; Z < 10; Z++)
		{
			sum = (10*A + Z)+(10*Z + A);
			if (sum == 99)
				printf("(A,Z) = (%d, %d) \n", A, Z);
		}
		A++;
		if (A > 9)
			break;
	}
	return 0;
}


<예제> - 영어 프로그램
#include <stdio.h>

int main(void)
{
	char sel;
	printf("M 오전, A 오후, E 저녁 \n");
	printf("입력: ");
	scanf_s("%c", &sel);

	switch (sel)
	{
	case 'M':
	case 'm':
		printf("Morning \n");
		break;
	case 'A':
	case 'a':
		printf("Afternoon \n");
		break;
	case 'E':
	case 'e':
		printf("Evening \n");
		break;
	}
	return 0;
}

####ch9#####
9-1
<문제1>
#include <stdio.h>

int max(int n1, int n2, int n3)
{
	if (n1 > n2&& n1 > n3)
		return n1;
	else if (n2 > n3&& n2 > n1)
		return n2;
	else
		return n3;
}

int min(int n1, int n2, int n3)
{
	if (n1 < n2 && n1 < n3)
		return n1;
	else if (n2 < n3 && n2 < n1)
		return n2;
	else
		return n3;
}

int main()
{
	int n1, n2, n3;
	printf("세 개의 정수를 입력: ");
	scanf("%d %d %d", &n1, &n2, &n3);

	printf("최댓값: %d \n", max(n1, n2, n3)); // 매개변수 입력해주기
	printf("최솟값: %d \n", min(n1, n2, n3)); // 매개변수 입력해주기

	return 0;
}

<문제2>
#include <stdio.h>

double CelToFah(double num1)
{
	return 1.8 * num1 + 32;
}

double FahToCel(double num2)
{
	return (num2 - 32) / 1.8;
}

int main(void)
{
	double num1, num2;
	char x;
	printf("C(섭씨) or F(화씨)? : ");
	scanf("%c", &x); // 아스키 코드의 경우 정수형으로 저장되기 때문에 %d이용, 하지만 문자 자체를 저장하기 위해 %c를 이용.
	
	switch (x)
	{
	case 'C':
		printf("섭씨온도를 입력 :");
		scanf("%lf", &num1); // 자료가 실수형일 경우 scanf함수에 %lf 
		printf("화씨온도로 변환 : %f \n", CelToFah(num1));
		break; // switch문을 빠져나오기 위해서

	case 'F':
		printf("화씨온도를 입력 : ");
		scanf("%lf", &num2);
		printf("섭씨온도로 변환 : %f \n", FahToCel(num2));
		break;
	}

	return 0;
}

<문제3>
#include <stdio.h>

int Pivo(int num1, int num2)
{
	return num1 + num2;
}

int main(void)
{
	int x, num1, num2, count;
	int y;
	printf("몇개의 피보나치 수열을 만들 것인가? : ");
	scanf("%d", &count);

	for (x = 0; x <= count; x++) // 횟수를 결정하는 반복문을 사용. 
	{
		if (x < 2)
		{
			printf("%d, ", x);
			num1 = 0, num2=1;
		}
		else
		{
			printf("%d, ", Pivo(num1,num2));
			y = 0;
			y += num2; // 이전에 num2값을 대체하기 위한 변수선언
			num2 = Pivo(num1, num2); // 결과값을 num2로 초기화하는 과정
			num1 = y; // 연산의 순서에 의해서 위에서 y라는 새로운 변수로 num2 초기화에 영향을 주지 않도록 설계.
		}
	}
	return 0;
}

OR

#include <stdio.h>

void Pivo(int n);

int main()
{
	int num;
	printf("n개의 피보나치 수열 만들기 : ");
	scanf("%d", &num);

	Pivo(num);
	return 0;
}

void Pivo(int n)
{
	int x = 0;
	int y = 1;
	int temp;
	for (int i = 0; i < n; i++)
	{
		if(i<=1)
			printf("%d ", i);
		else
		{
			temp = y;
			y += x;
			x = temp;
			printf("%d ", y);
		}
	}
}

<문제3> 답안지 
#include <stdio.h>

void Pivo(int num) // 인자전달이란 다른 함수에서 받아와야하는 인자가 있는경우 사용?
{
	int f1 = 0, f2 = 1, f3, i;
	if (num == 1)
		printf("%d, ", f1);
	else
		printf("%d, %d, ", f1, f2);

	for (i = 0; i < num - 2; i++) // 반복횟수 설정에서 앞에서 두번 0,1을 출력을 했기 때문에
	{
		f3 = f1 + f2;
		printf("%d, ", f3);
		f1 = f2; // 왼쪽 변수가 오른쪽 변수로 초기화 된다.
		f2 = f3;
	}
}

int main(void)
{
	int num;
	printf("몇개의 피보나치 수열을 만들것인가? : ");
	scanf("%d", &num);
	if (num < 1)
	{
		printf("1이상의 값을 입력하시오. \n");
		return -1;
	}
	Pivo(num); // 함수를 호출. 반환값이 있는 함수라면 특정값이 나오나?
	return 0;
}










